self.addEventListener('fetch', event => {
  // Check if the request is meant for the proxy.
  if (event.request.url.startsWith(location.origin + '/service/')) {
    event.respondWith(
      (async () => {
        try {
          // Extract the URL from the request.
          const url = new URL(event.request.url).searchParams.get('url');

          if (!url) {
            throw new Error('URL parameter is missing.');
          }

          // Fetch the resource through the proxy.
          const response = await fetch(url, {
            method: event.request.method,
            headers: event.request.headers,
            body: event.request.body,
            redirect: 'follow'
          });

          // Return the proxied response.
          return response;
        } catch (error) {
          // Handle errors gracefully.
          console.error('Proxy error:', error);
          return new Response(`Proxy error: ${error.message}`, {
            status: 500,
            headers: { 'Content-Type': 'text/plain' }
          });
        }
      })()
    );
  }
});