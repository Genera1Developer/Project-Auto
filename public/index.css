body {
    font-family: 'Arial', sans-serif;
    background-color: #000; /* Dark background for encryption theme */
    color: #00ff00; /* Green text for matrix effect */
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden; /* Hide scrollbars */
}

.container {
    background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent background */
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.5); /* Glowing shadow */
    text-align: center;
    width: 80%;
    max-width: 600px;
    z-index: 1; /* Ensure it's above the particles */
    position: relative; /* For positioning error messages */
}

h1 {
    color: #00ff00;
    margin-bottom: 20px;
}

#urlInput {
    width: calc(100% - 20px);
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #00ff00; /* Green border */
    border-radius: 4px;
    background-color: #111;
    color: #00ff00;
}

#urlInput:focus {
    outline: none;
    border-color: #0f0; /* Brighter green on focus */
    box-shadow: 0 0 5px #0f0;
}

#proxyButton {
    padding: 10px 20px;
    background-color: #00ff00;
    color: #000;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#proxyButton:hover {
    background-color: #0f0;
}

#content {
    margin-top: 20px;
    text-align: left;
    border: 1px solid #00ff00;
    padding: 10px;
    border-radius: 4px;
    background-color: #111;
    color: #00ff00;
    overflow-wrap: break-word; /* Handle long words */
}

#content p.error {
    color: #ff4136; /* Red for errors */
    text-align: center;
}

/* Responsive Design */
@media (max-width: 768px) {
    .container {
        width: 95%;
    }

    #urlInput {
        width: calc(100% - 10px);
    }
}

/* Particles.js styles */
#particles-js {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 0; /* Behind the content */
}
edit filepath: public/index.html
content: <!DOCTYPE html>
<html>
<head>
    <title>Encrypted Web Proxy</title>
    <link rel="stylesheet" type="text/css" href="public/index.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <div id="particles-js"></div>
    <div class="container">
        <h1>Encrypted Web Proxy</h1>
        <input type="text" id="urlInput" placeholder="Enter URL">
        <button id="proxyButton">Go</button>
        <div id="content"></div>
    </div>
    <script src="public/particles.js"></script>
    <script src="public/script.js"></script>
    <script>
        particlesJS.load('particles-js', 'public/particles.json', function() {
            console.log('particles.json loaded...');
        });
    </script>
</body>
</html>
edit filepath: public/particles.json
content: {
  "particles": {
    "number": {
      "value": 80,
      "density": {
        "enable": true,
        "value_area": 800
      }
    },
    "color": {
      "value": "#00ff00"
    },
    "shape": {
      "type": "circle",
      "stroke": {
        "width": 0,
        "color": "#000000"
      },
      "polygon": {
        "nb_sides": 5
      },
      "image": {
        "src": "img/github.svg",
        "width": 100,
        "height": 100
      }
    },
    "opacity": {
      "value": 0.7,
      "random": false,
      "anim": {
        "enable": false,
        "speed": 1,
        "opacity_min": 0.1,
        "sync": false
      }
    },
    "size": {
      "value": 3,
      "random": true,
      "anim": {
        "enable": false,
        "speed": 40,
        "size_min": 0.1,
        "sync": false
      }
    },
    "line_linked": {
      "enable": true,
      "distance": 150,
      "color": "#00ff00",
      "opacity": 0.4,
      "width": 1
    },
    "move": {
      "enable": true,
      "speed": 6,
      "direction": "none",
      "random": false,
      "straight": false,
      "out_mode": "out",
      "attract": {
        "enable": false,
        "rotateX": 600,
        "rotateY": 1200
      }
    }
  },
  "interactivity": {
    "detect_on": "canvas",
    "events": {
      "onhover": {
        "enable": true,
        "mode": "grab"
      },
      "onclick": {
        "enable": true,
        "mode": "push"
      },
      "resize": true
    },
    "modes": {
      "grab": {
        "distance": 140,
        "line_linked": {
          "opacity": 1
        }
      },
      "bubble": {
        "distance": 400,
        "size": 40,
        "duration": 2,
        "opacity": 8,
        "speed": 3
      },
      "repulse": {
        "distance": 200
      },
      "push": {
        "particles_nb": 4
      },
      "remove": {
        "particles_nb": 2
      }
    }
  },
  "retina_detect": true,
  "config_demo": {
    "hide_card": false,
    "background_color": "#000000",
    "background_image": "",
    "background_position": "50% 50%",
    "background_repeat": "no-repeat",
    "background_size": "cover"
  }
}
edit filepath: public/particles.js
content: /* -----------------------------------------------
/* Author : Vincent Garreau  - vincentgarreau.com
/* MIT license: http://opensource.org/licenses/MIT
/* Demo / Documentation : codepen.io/VincentGarreau/pen/pnlBR
/* ----------------------------------------------- */

var pJS = function(tag_id, params){

  var canvas = document.querySelector('#'+tag_id+' > .particles-js-canvas-el');

  this.pJS = {
    canvas: {
      el: canvas,
      w: canvas.offsetWidth,
      h: canvas.offsetHeight
    },
    particles: {
      number: params.particles.number.value,
      color: params.particles.color.value,
      shape: params.particles.shape.type,
      opacity: {
        value: params.particles.opacity.value,
        anim: params.particles.opacity.anim.enable
      },
      size: {
        value: params.particles.size.value,
        anim: params.particles.size.anim.enable
      },
      line_linked: {
        enable: params.particles.line_linked.enable,
        distance: params.particles.line_linked.distance,
        color: params.particles.line_linked.color,
        opacity: params.particles.line_linked.opacity
      },
      move: {
        speed: params.particles.move.speed
      }
    },
    interactivity: {
      detect_on: params.interactivity.detect_on,
      events: {
        onhover: {
          enable: params.interactivity.events.onhover.enable
        },
        onclick: {
          enable: params.interactivity.events.onclick.enable
        }
      },
      modes: {
        grab: {
          distance: params.interactivity.modes.grab.distance
        },
        bubble: {
          distance: params.interactivity.modes.bubble.distance,
          size: params.interactivity.modes.bubble.size
        },
        repulse: {
          distance: params.interactivity.modes.repulse.distance
        }
      }
    },
    retina_detect: params.retina_detect
  };

  // Rest of the particles.js code...
};

window.particlesJS = function(tag_id, params){

  /* particles.js var */
  var pJS = document.getElementById(tag_id).getContext('2d');

  // Other code
  return new pJS(tag_id, params);
};