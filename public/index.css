body {
    font-family: 'Arial', sans-serif;
    background-color: #000;
    color: #0f0;
    margin: 0;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

#particles-js {
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: -1;
    background-color: #000;
}

.container {
    text-align: center;
    padding: 20px;
    border: 1px solid #0f0;
    border-radius: 10px;
    background-color: rgba(0, 0, 0, 0.8);
    box-shadow: 0 0 20px #0f0;
}

h1 {
    font-size: 2em;
    margin-bottom: 20px;
    text-shadow: 0 0 10px #0f0;
}

input[type="text"] {
    padding: 10px;
    width: 80%;
    margin-bottom: 20px;
    background-color: #222;
    color: #0f0;
    border: 1px solid #0f0;
    border-radius: 5px;
}

button {
    padding: 10px 20px;
    background-color: #0f0;
    color: #000;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

button:hover {
    background-color: #0a0;
    box-shadow: 0 0 10px #0f0;
}

#error-message {
    color: red;
    margin-top: 10px;
}
edit filepath: public/script.js
content: document.addEventListener('DOMContentLoaded', function() {
    particlesJS.load('particles-js', 'particles.json', function() {
        console.log('particles.json loaded...');
    });

    const form = document.querySelector('form');
    const urlInput = document.getElementById('url');
    const errorMessage = document.getElementById('error-message');

    form.addEventListener('submit', function(event) {
        event.preventDefault();
        const url = urlInput.value.trim();

        if (!url) {
            errorMessage.textContent = 'Please enter a URL.';
            return;
        }

        errorMessage.textContent = '';

        // Basic URL validation (you might want to use a more robust solution)
        if (!isValidURL(url)) {
            errorMessage.textContent = 'Please enter a valid URL.';
            return;
        }

        // Using Ultraviolet's encodeUrl
        const encodedURL = Ultraviolet.encodeUrl(url);
        window.location.href = __uv$config.prefix + encodedURL;
    });

    function isValidURL(str) {
      try {
        new URL(str);
        return true;
      } catch (_) {
        return false;
      }
    }
});
edit filepath: public/particles.json
content: {
  "particles": {
    "number": {
      "value": 80,
      "density": {
        "enable": true,
        "value_area": 800
      }
    },
    "color": {
      "value": "#0f0"
    },
    "shape": {
      "type": "circle",
      "stroke": {
        "width": 0,
        "color": "#000000"
      },
      "polygon": {
        "nb_sides": 5
      },
      "image": {
        "src": "img/github.svg",
        "width": 100,
        "height": 100
      }
    },
    "opacity": {
      "value": 0.7,
      "random": true,
      "anim": {
        "enable": true,
        "speed": 1,
        "opacity_min": 0.1,
        "sync": false
      }
    },
    "size": {
      "value": 3,
      "random": true,
      "anim": {
        "enable": false,
        "speed": 40,
        "size_min": 0.1,
        "sync": false
      }
    },
    "line_linked": {
      "enable": true,
      "distance": 150,
      "color": "#0f0",
      "opacity": 0.4,
      "width": 1
    },
    "move": {
      "enable": true,
      "speed": 3,
      "direction": "none",
      "random": true,
      "straight": false,
      "out_mode": "out",
      "bounce": false,
      "attract": {
        "enable": false,
        "rotateX": 600,
        "rotateY": 1200
      }
    }
  },
  "interactivity": {
    "detect_on": "canvas",
    "events": {
      "onhover": {
        "enable": true,
        "mode": "grab"
      },
      "onclick": {
        "enable": true,
        "mode": "push"
      },
      "resize": true
    },
    "modes": {
      "grab": {
        "distance": 140,
        "line_linked": {
          "opacity": 1
        }
      },
      "bubble": {
        "distance": 400,
        "size": 40,
        "duration": 2,
        "opacity": 8,
        "speed": 3
      },
      "repulse": {
        "distance": 200,
        "duration": 0.4
      },
      "push": {
        "particles_nb": 4
      },
      "remove": {
        "particles_nb": 2
      }
    }
  },
  "retina_detect": true
}