body {
    font-family: 'Arial', sans-serif;
    background-color: #000;
    color: #fff;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    overflow: hidden;
}

#particles-js {
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 0;
}

.container {
    background-color: rgba(0, 0, 0, 0.7);
    border-radius: 10px;
    padding: 30px;
    text-align: center;
    box-shadow: 0 0 20px rgba(0, 200, 200, 0.5);
    z-index: 1;
    width: 80%;
    max-width: 600px;
}

h1 {
    font-size: 2.5em;
    margin-bottom: 20px;
    color: #00bcd4;
    text-shadow: 0 0 10px rgba(0, 188, 212, 0.8);
}

p {
    font-size: 1.2em;
    margin-bottom: 30px;
}

#urlForm {
    display: flex;
    flex-direction: column;
    align-items: center;
}

input[type="url"] {
    padding: 15px;
    margin-bottom: 20px;
    border: none;
    border-radius: 5px;
    width: 100%;
    max-width: 400px;
    font-size: 1em;
    background-color: #222;
    color: #fff;
    box-shadow: 0 0 10px rgba(0, 188, 212, 0.3);
}

button[type="submit"] {
    padding: 15px 30px;
    border: none;
    border-radius: 5px;
    background-color: #00bcd4;
    color: #fff;
    font-size: 1.1em;
    cursor: pointer;
    transition: background-color 0.3s ease;
    box-shadow: 0 0 10px rgba(0, 188, 212, 0.5);
}

button[type="submit"]:hover {
    background-color: #008ba7;
}

.error {
    color: #ff5252;
    margin-top: 20px;
    font-size: 1em;
}
edit filepath: public/script.js
content: document.addEventListener('DOMContentLoaded', function() {
    const urlForm = document.getElementById('urlForm');
    const urlInput = document.getElementById('urlInput');
    const errorDisplay = document.getElementById('errorDisplay');

    urlForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const url = urlInput.value;

        if (isValidUrl(url)) {
            // Basic URL validation, more comprehensive validation might be needed
            window.location.href = '/?url=' + encodeURIComponent(url);
        } else {
            errorDisplay.textContent = 'Please enter a valid URL.';
        }
    });

    function isValidUrl(url) {
        try {
            new URL(url);
            return true;
        } catch (_) {
            return false;
        }
    }
});
edit filepath: uv/uv.config.js
content: self.__uv$config = {
    prefix: '/service/',
    bare: '/bare/',
    encodeUrl: Ultraviolet.codec.xor.encode,
    decodeUrl: Ultraviolet.codec.xor.decode,
    handler: '/uv/uv.handler.js',
    bundle: '/uv/uv.bundle.js',
    config: '/uv/uv.config.js',
    sw: '/uv/uv.sw.js',
};