header {
  /* Improved Security: Added Content Security Policy (CSP) directives */
  /* Stricter CSP - Remove 'unsafe-inline' and 'unsafe-eval' if possible. Consider nonces or hashes for inline styles/scripts. This is an example only and needs tailoring. */
  content-security-policy: "default-src 'self'; script-src 'self' 'nonce-{csp_nonce}'; style-src 'self' 'nonce-{csp_nonce}'; img-src 'self' data:; font-src 'self'; connect-src 'self' https://example.com wss://example.com; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; object-src 'none'; block-all-mixed-content; upgrade-insecure-requests; require-trusted-types-for 'script'; trusted-types default-allow;";
  /* Feature Policy (now Permissions Policy) - disable features not required to further reduce attack surface */
  permissions-policy: "geolocation=(), microphone=(), camera=(), payment=(), interest-cohort=(), document-domain=(), sync-xhr=()";
  /* HTTP Strict Transport Security (HSTS) - Enforce HTTPS */
  strict-transport-security: max-age=31536000; includeSubDomains; preload;
  x-content-type-options: nosniff;
  x-frame-options: DENY;
  referrer-policy: no-referrer;
  x-xss-protection: 1; mode=block;
  clear-site-data: "cache", "cookies", "storage";
  /* Expect-CT - Enforce Certificate Transparency */
  expect-ct: max-age=604800, enforce;
  /* Cross-Origin Opener Policy (COOP) - Mitigate Spectre */
  cross-origin-opener-policy: same-origin;
  /* Cross-Origin Embedder Policy (COEP) - Mitigate Spectre */
  cross-origin-embedder-policy: require-corp;
  /* Cross-Origin Resource Policy (CORP) - Control cross-origin requests */
  cross-origin-resource-policy: same-origin;
  /* Subresource Integrity (SRI) */
  /* integrity: 'sha384-EXAMPLE...'; */
  /* Additional hardening: prevent website from being rendered in frames across domains */
  cross-origin-window-policy: deny;
}

/* Existing styles - these are just placeholders */
body {
  font-family: sans-serif;
  margin: 0;
  padding: 0;
}